const { MerkleTree } = require('merkletreejs');
const keccak256 = require('keccak256');



export const GetProof = (address) => {
    const whitelistAddresses = [0xD18Fc64eb92d817da29840096D0E4F2c0F623bEd,0x059B0d30a7E1E38731D1e9595962AF185dA96e80,0x8FF90F1E3E6a49a2eae9dF037daDa50667c0A284,0xF0ec04453Fc92b64b61f435EFE4a9C95A0288A79,0xe1b8fa08A480c63434570350F3b8deC345Ec340E,0xdB912FAb7AB5FD40F17fD470573b3B999c62232c,0xD399B373A1fc27C4eb7a85C0a3BB078997249E4A,0x1ad0F8a8d2aBf001cc6300Ae76A9806fB055A3F5,0x9fa03f422B5AAF9C74f0464E5AE7A3C9223d646D,0xE401d18F6F835C12CA54E54a2f16A802b651eaa7,0x97358Fc05be229DB4c4b086110812C817fBf532A,0x1e21bd70E17D43E50b9Cc13c9d6F51A4611CAC1A,0x1057F6C056f4062d7b59DE01D9661Ee11E7317Ff,0x713c9aa2bDc82feBc3b7F0e07F8a19A99bF6e047,0xFfE973085371376e187F937aBE7E2175876483E2,0x0F0D9b57d06FEad89154B25a946B2D8DAD6f22b7,0x1D584dF8e6792f58B82f2cA81516d0558c1f6017,0xcdec431a7170d10347629C858C6D7CF144E743dD,0x2C51EF787BdF46B5b5BB5B103FA38a85F031C22F,0xbE48c6D23277dA3Abb118A0ed717D4bE2192A448,0xc61F778a4B36D1cd9aee1A3Ca8c22D407cd7AE68,0xF87c6aF470E3B67586316B54ef06830270D43Bd4,0xf98e8D1009E3f4E2b8899A275bbCD3bbF59ad6A6,0x5e36dc8d111e415D38F70Be80ea1d2A37e46d1f8,0x591133e10C2f096AB447f10Bf10dCFc3c0363FE9,0x85cE868Ca244b02Fa4de5A12f786F106cEe6c709,0xC0409E34A7b4f40A604d86224EEb997D079Dee8D,0xd7E4cE6355dB3704DC788FB52427fEe3069c4012,0x8a31dF2c3C3f36671b4d9a500CfF2c802349E3f7,0x025E03A90607F6F9DE7d9F80a48B7ceA77f37C6f,0x415F19D701bBe5C7D17EC7807c2EE3faC7b4bF83,0x10900548c32474eaF5368c01ead468D78AC40D0b,0x85cE868Ca244b02Fa4de5A12f786F106cEe6c709,0xb7253ADcAf57FDF8AA0d59638F61040a12cb50A9,0x415F19D701bBe5C7D17EC7807c2EE3faC7b4bF83,0x83d8fe37105f254AE782285545dED843d417272D,0xBD751CaC1FB27D930a6a0394D97C77908d94AD5D,0x9E32560cBc32E1Ea4c737d65F043A0d8f8310422,0x89ffCee2a9013BC111f6A1d4b9A14c21FDa27e1a,0xcDB1F3e47A0F58920D22e82FAd9d3eB4784A466E,0xC0409E34A7b4f40A604d86224EEb997D079Dee8D,0x27eE632c1e3Dd044c8Cf2C2aC4bE15357EA9e564]

    const leafNodes = whitelistAddresses.map(addr => keccak256(addr));
    const merkleTree = new MerkleTree(leafNodes, keccak256, { sortPairs: true })

    const claimAddr = keccak256(address)
    const hexProof = merkleTree.getHexProof(claimAddr)

    return hexProof
}

export const GetWhitelist = (address) => {
    const whitelistAddresses = [0xD18Fc64eb92d817da29840096D0E4F2c0F623bEd,0x059B0d30a7E1E38731D1e9595962AF185dA96e80,0x8FF90F1E3E6a49a2eae9dF037daDa50667c0A284,0xF0ec04453Fc92b64b61f435EFE4a9C95A0288A79,0xe1b8fa08A480c63434570350F3b8deC345Ec340E,0xdB912FAb7AB5FD40F17fD470573b3B999c62232c,0xD399B373A1fc27C4eb7a85C0a3BB078997249E4A,0x1ad0F8a8d2aBf001cc6300Ae76A9806fB055A3F5,0x9fa03f422B5AAF9C74f0464E5AE7A3C9223d646D,0xE401d18F6F835C12CA54E54a2f16A802b651eaa7,0x97358Fc05be229DB4c4b086110812C817fBf532A,0x1e21bd70E17D43E50b9Cc13c9d6F51A4611CAC1A,0x1057F6C056f4062d7b59DE01D9661Ee11E7317Ff,0x713c9aa2bDc82feBc3b7F0e07F8a19A99bF6e047,0xFfE973085371376e187F937aBE7E2175876483E2,0x0F0D9b57d06FEad89154B25a946B2D8DAD6f22b7,0x1D584dF8e6792f58B82f2cA81516d0558c1f6017,0xcdec431a7170d10347629C858C6D7CF144E743dD,0x2C51EF787BdF46B5b5BB5B103FA38a85F031C22F,0xbE48c6D23277dA3Abb118A0ed717D4bE2192A448,0xc61F778a4B36D1cd9aee1A3Ca8c22D407cd7AE68,0xF87c6aF470E3B67586316B54ef06830270D43Bd4,0xf98e8D1009E3f4E2b8899A275bbCD3bbF59ad6A6,0x5e36dc8d111e415D38F70Be80ea1d2A37e46d1f8,0x591133e10C2f096AB447f10Bf10dCFc3c0363FE9,0x85cE868Ca244b02Fa4de5A12f786F106cEe6c709,0xC0409E34A7b4f40A604d86224EEb997D079Dee8D,0xd7E4cE6355dB3704DC788FB52427fEe3069c4012,0x8a31dF2c3C3f36671b4d9a500CfF2c802349E3f7,0x025E03A90607F6F9DE7d9F80a48B7ceA77f37C6f,0x415F19D701bBe5C7D17EC7807c2EE3faC7b4bF83,0x10900548c32474eaF5368c01ead468D78AC40D0b,0x85cE868Ca244b02Fa4de5A12f786F106cEe6c709,0xb7253ADcAf57FDF8AA0d59638F61040a12cb50A9,0x415F19D701bBe5C7D17EC7807c2EE3faC7b4bF83,0x83d8fe37105f254AE782285545dED843d417272D,0xBD751CaC1FB27D930a6a0394D97C77908d94AD5D,0x9E32560cBc32E1Ea4c737d65F043A0d8f8310422,0x89ffCee2a9013BC111f6A1d4b9A14c21FDa27e1a,0xcDB1F3e47A0F58920D22e82FAd9d3eB4784A466E,0xC0409E34A7b4f40A604d86224EEb997D079Dee8D,0x27eE632c1e3Dd044c8Cf2C2aC4bE15357EA9e564]

    const leafNodes = whitelistAddresses.map(addr => keccak256(addr));
    const merkleTree = new MerkleTree(leafNodes, keccak256, { sortPairs: true })

    const claimAddr = keccak256(address)
    const hexProof = merkleTree.getHexProof(claimAddr)
    
    const hexRoot = merkleTree.getHexRoot(leafNodes, claimAddr)

    const verify = merkleTree.verify(hexProof, claimAddr, hexRoot)

    return verify
}
